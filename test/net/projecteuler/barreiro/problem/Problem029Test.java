/* COPYRIGHT (C) 2014 barreiro. All Rights Reserved. */

package net.projecteuler.barreiro.problem;

import org.junit.Test;

import static org.junit.Assert.assertEquals;

/**
 * Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
 * <p>
 * 2^2=4, 2^3=8, 2^4=16, 2^5=32
 * 3^2=9, 3^3=27, 3^4=81, 3^5=243
 * 4^2=16, 4^3=64, 4^4=256, 4^5=1024
 * 5^2=25, 5^3=125, 5^4=625, 5^5=3125
 * <p>
 * If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:
 * <p>
 * 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 * <p>
 * How many distinct terms are in the sequence generated by a^b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
 *
 * @author barreiro
 */
public class Problem029Test extends ProjectEulerAbstractTest {

    @Test
    public void test() {
        assertEquals(9183, new Solver029().solve());
    }

    @Test
    public void example() {
        assertEquals(15, new Solver029(5).solve());
    }

    @Test
    public void minimal() {
        assertEquals(1, new Solver029(2).solve());
    }

    @Test
    public void verySmall() {
        assertEquals(4, new Solver029(3).solve());
    }

    @Test
    public void small() {
        assertEquals(8, new Solver029(4).solve());
    }

    @Test
    public void notSoSmall() {
        assertEquals(324, new Solver029(20).solve());
    }

    @Test
    public void medium() {
        assertEquals(2184, new Solver029(50).solve());
    }

}
